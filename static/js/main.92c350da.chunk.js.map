{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Error.js","componentes/Clima.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Fomulario","ciudadRef","React","createRef","paisRef","buscarClima","e","preventDefault","respuesta","ciudad","_this","current","value","pais","datosConsulta","onSubmit","this","id","ref","type","htmlFor","defaultValue","Component","Error","mensaje","Clima","mostrarResultado","_this$props$resultado","resultado","name","weather","main","urlIcono","concat","icon","alt","temp","toFixed","src","temp_max","temp_min","humidity","App","state","error","consulta","consultarApi","_this$state$consulta","url","fetch","then","json","datos","setState","catch","console","log","prevProps","prevState","cod","componentes_Error","componentes_Clima","componentes_Header","Formulario","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92c350da.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<nav>\r\n\t\t\t\t<div className=\"nav-wrapper light-blue darken-2\">\r\n\t\t\t\t\t<a className=\"brand-logo\">{props.titulo}</a>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n};\r\nHeader.propTypes = {\r\n\ttitulo: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Fomulario extends Component {\r\n\tciudadRef = React.createRef();\r\n\tpaisRef = React.createRef();\r\n\r\n\tbuscarClima = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst respuesta = {\r\n\t\t\tciudad: this.ciudadRef.current.value,\r\n\t\t\tpais: this.paisRef.current.value\r\n\t\t};\r\n\t\t//console.log(respuesta);\r\n\r\n\t\tthis.props.datosConsulta(respuesta);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"contenedor-form\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<form onSubmit={this.buscarClima}>\r\n\t\t\t\t\t\t\t<div className=\"input-field col s12 m8 l4 offset-m2\">\r\n\t\t\t\t\t\t\t\t<input id=\"ciudad\" ref={this.ciudadRef} type=\"text\" />\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"ciudad\">City:</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"input-field col s12 m8 l4 offset-m2\">\r\n\t\t\t\t\t\t\t\t<select ref={this.paisRef}>\r\n\t\t\t\t\t\t\t\t\t<option value=\"\" defaultValue>\r\n\t\t\t\t\t\t\t\t\t\tSelect a country\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"PL\">Poland</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"CO\">Colombia</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"US\">USA</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"CN\">China</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"JP\">Japan</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"IT\">Italy</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"GB\">England</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"FR\">France</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"DE\">Germany</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"CH\">Switzerland</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"IE\">Ireland</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"pais\">Country:</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"input-field col s12 m8 l4 offset-2 buscador\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"waves-effect waves-light btn-large yellow accent-4\"\r\n\t\t\t\t\t\t\t\t\tvalue=\"Search.....\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nFomulario.propTypes = {\r\n\tdatosConsulta: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Fomulario;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = (props) => {\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col s12 m6 offset-m3\">\r\n\t\t\t\t\t<div className=\"card-panel red darken-4 error\">{props.mensaje}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nError.propTypes = {\r\n\tmensaje: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Clima extends Component {\r\n\tmostrarResultado = () => {\r\n\t\tconst { name, weather, main } = this.props.resultado;\r\n\t\tif (!name || !weather || !main) return null;\r\n\r\n\t\tconst kelvin = 273.15;\r\n\r\n\t\tconst urlIcono = `http://openweathermap.org/img/w/${weather[0].icon}.png`;\r\n\r\n\t\tconst alt = `weather ${name}`;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"resultado col s12 m8 l6 offset-m2 offset-l3\">\r\n\t\t\t\t\t<div className=\"card-panel light-blue align-center\">\r\n\t\t\t\t\t\t<span className=\"white-text\">\r\n\t\t\t\t\t\t\t<h2>Your weather for today: {name}</h2>\r\n\t\t\t\t\t\t\t<p className=\"temperatura\">\r\n\t\t\t\t\t\t\t\tNow: {(main.temp - kelvin).toFixed(0)} &deg;C\r\n\t\t\t\t\t\t\t\t<img src={urlIcono} alt={alt} />\r\n\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t<p>Max. {(main.temp_max - kelvin).toFixed(0)} &deg;C</p>\r\n\t\t\t\t\t\t\t<p>Min. {(main.temp_min - kelvin).toFixed(0)} &deg;C</p>\r\n\t\t\t\t\t\t\t<p>Humidity. {main.humidity.toFixed(0)} %</p>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn <div className=\"container\">{this.mostrarResultado()}</div>;\r\n\t}\r\n}\r\nClima.propTypes = {\r\n\tresultado: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Clima;\r\n","import React, { Component } from 'react';\nimport Header from './componentes/Header';\nimport Formulario from './componentes/Formulario';\nimport Error from './componentes/Error';\nimport Clima from './componentes/Clima';\n\nclass App extends Component {\n\tstate = {\n\t\terror: '',\n\t\tconsulta: {},\n\t\tresultado: {}\n\t};\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.consulta !== this.state.consulta) {\n\t\t\tthis.consultarApi();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\terror: false\n\t\t});\n\t}\n\n\tconsultarApi = () => {\n\t\tconst { ciudad, pais } = this.state.consulta;\n\t\tif (!ciudad || !pais) return null;\n\n\t\tconst appId = '3e114dfec79e505e09d7c5ab1f4eeaa3';\n\t\tlet url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n\n\t\tfetch(url)\n\t\t\t.then((respuesta) => {\n\t\t\t\treturn respuesta.json();\n\t\t\t})\n\t\t\t.then((datos) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tresultado: datos\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\tdatosConsulta = (respuesta) => {\n\t\tif (respuesta.ciudad === '' || respuesta.pais === '') {\n\t\t\tthis.setState({\n\t\t\t\terror: true\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tconsulta: respuesta,\n\t\t\t\terror: false\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { error } = this.state.error,\n\t\t\t{ cod } = this.state.resultado;\n\n\t\tlet resultado;\n\n\t\tif (error) {\n\t\t\tresultado = <Error mensaje=\"The two fields are obligatory\" />;\n\t\t} else if (cod === '404') {\n\t\t\tresultado = <Error mensaje=\"City not found\" />;\n\t\t} else {\n\t\t\tresultado = <Clima resultado={this.state.resultado} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Header titulo=\"Weather React\" />\n\t\t\t\t<Formulario datosConsulta={this.datosConsulta} />\n\t\t\t\t{resultado}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}